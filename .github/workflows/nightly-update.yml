name: Nightly update

on:
  workflow_dispatch: ~
  schedule:
    # Run daily at 17:47 UTC
    - cron: '47 17 * * *'

jobs:
  update-data:
    name: Update data
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull OSM data
        run: |
          docker pull ghcr.io/hiddewie/openrailwaymap-data:latest
          DB_CONTAINER_ID="$(docker container create ghcr.io/hiddewie/openrailwaymap-data:latest sleep inf)"
          docker cp "$DB_CONTAINER_ID:/data/data.osm.pbf" data/filtered/data.osm.pbf

      - name: Build import image
        run: |
          docker compose build import

      - name: Update OSM data
        run: |
          docker compose run --no-deps import update

      - name: Build new OSM data image
        run: |
          cat > .dockerignore << EOF
          **
          !data/filtered/data.osm.pbf
          EOF
          
          cat > Dockerfile << EOF
          FROM scratch
          COPY data/filtered/data.osm.pbf /data/data.osm.pbf
          EOF
          
          docker build --tag ghcr.io/hiddewie/openrailwaymap-data:latest .
          
          git checkout -- .

      - name: Push OSM data
        run: |
          docker push ghcr.io/hiddewie/openrailwaymap-data:latest

      - name: Build database
        run: |
          docker compose build db

      - name: Start database
        run: |
          docker compose up --wait db
          docker inspect "$(docker compose ps --all --format json | jq -r 'select(.Service == "db") | .ID')"

      - name: Import data
        env:
          OSM2PGSQL_CACHE: '8000'
          OSM2PGSQL_NUMPROC: '8'
        run: |
          docker compose run import import

      - name: Push data
        run: |
          docker compose stop db
          DB_CONTAINER_ID="$(docker compose ps --all --format json | jq -r 'select(.Service == "db") | .ID')"
          docker commit "$DB_CONTAINER_ID" ghcr.io/hiddewie/openrailwaymap-import-db:latest
          docker compose push db
