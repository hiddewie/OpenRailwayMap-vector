name: Deploy

on:
  workflow_dispatch: ~

jobs:
#  deploy-proxy:
#    name: Deploy proxy
#    runs-on: ubuntu-latest
#    environment: proxy-production
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Setup Fly
#        uses: superfly/flyctl-actions/setup-flyctl@master
#
#      # Manually write import bounds, to decouple proxy from tile generation/import
#      - name: Output import bounds
#        run: |
#          jq -c '
#            [.[].bboxes] | flatten | [
#              [
#                (map(split(",")[0] | tonumber) | min),
#                (map(split(",")[1] | tonumber) | min)
#              ],
#              [
#                (map(split(",")[2] | tonumber) | max),
#                (map(split(",")[3] | tonumber) | max)
#              ]
#            ]
#          ' tiles/deploy-bboxes.json > data/import/bounds.json
#
#      - name: Deploy
#        env:
#          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
#        run: |
#          flyctl deploy --config proxy.fly.toml --local-only

  tiles-bboxes:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.bboxes.outputs.matrix }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: bboxes
        run: |
          {
            echo -n 'matrix='
            jq -c '{ include: [
              (.["north-america"][].bboxes | map({bbox: ., region: "north-america"}) | .[]),
              (.["europe"][].bboxes | map({bbox: ., region: "europe"}) | .[])
            ]}' tiles/deploy-bboxes.json
          } >> $GITHUB_OUTPUT

  generate-tiles-low-med:
    name: Generate low zoom tiles
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull database
        run: |
          docker compose pull db
          docker compose up --no-build --pull never --wait db

      - name: Generate tiles
        env:
          TILES: low-med
          BBOX: -180,-80,180,80
        run: |
          docker compose run --no-deps martin-cp

      - name: List generated tiles
        run: |
          ls -lah tiles/*.mbtiles

#      - name: Deploy
#        env:
#          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
#        run: |
#          flyctl deploy --config martin-static.fly.toml --local-only

  generate-tiles:
    name: Generate tiles
    runs-on: ubuntu-latest

    needs:
      - tiles-bboxes

    strategy:
      matrix: ${{ fromJson(needs.tiles-bboxes.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull database
        run: |
          docker compose pull db
          docker compose up --no-build --pull never --wait db

      - name: Generate tiles
        env:
          BBOX: ${{ matrix.bbox }}
        run: |
          docker compose run --no-deps martin-cp

          mkdir -p "tiles/split/${{ matrix.bbox }}"
          mv tiles/*.mbtiles "tiles/split/${{ matrix.bbox }}"

      - name: List generated tiles
        run: |
          ls -lah tiles/split/${{ matrix.bbox }}/*.mbtiles

      - uses: actions/upload-artifact@v4
        with:
          name: tiles-${{ matrix.region }}-${{ matrix.bbox }}
          path: |
            tiles/split
          if-no-files-found: error
          retention-days: 3

  deploy-tiles:
    name: Merge and deploy tiles
    runs-on: ubuntu-latest

    needs:
      - tiles-bboxes
      - generate-tiles

    strategy:
      matrix:
        region:
          - europe
          - north-america

    environment: tiles-production-${{ matrix.region }}

    env:
      BBOXES: ${{ needs.tiles-bboxes.outputs.bboxes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v4
        with:
          pattern: tiles-${{ matrix.region }}-*
          merge-multiple: true
          path: tiles/split

      - name: Generate bboxes
        id: bboxes
        run: |
          {
            echo -n 'bboxes='
            jq -r '[.["${{ matrix.region }}"].[].bboxes] | flatten | .[]' tiles/deploy-bboxes.json | tr '\n' ' '
          } >> $GITHUB_OUTPUT

      - name: Merge tiles
        env:
          BBOXES: ${{ steps.bboxes.outputs.bboxes }}
        run: |
          docker compose run --entrypoint /tiles/merge.sh -e BBOXES --no-deps martin-cp

      - name: Delete split tiles
        env:
          BBOXES: ${{ steps.bboxes.outputs.bboxes }}
        run: |
          for bbox in $BBOXES; do
            rm -rf "tiles/split/$bbox"
          done

      - name: List generated tiles
        run: |
          ls -lah tiles/*.mbtiles

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy --app openrailwaymap-tiles-${{ matrix.region }} --config martin-static.fly.toml --local-only

#  deploy-api:
#    name: Deploy API
#    runs-on: ubuntu-latest
#    environment: api-production
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Setup Fly
#        uses: superfly/flyctl-actions/setup-flyctl@master
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Pull database
#        run: |
#          docker compose pull db
#          docker compose up --no-build --pull never --wait db
#
#      - name: Prepare and build API container
#        env:
#          SKIP_CLEANUP: 'yes'
#        run: |
#          api/prepare-api.sh
#
#      - name: Print import logs
#        if: ${{ always() }}
#        run: |
#          docker compose logs api-import
#
#      - name: Deploy
#        env:
#          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
#        run: |
#          flyctl deploy --config api.fly.toml --local-only api
